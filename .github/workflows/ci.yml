name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=10

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Install Docker Compose (if needed)
      - name: Set up Docker Compose
        run: |
          docker compose version || sudo apt-get update && sudo apt-get install -y docker-compose

      # 3️⃣ Build and start containers
      - name: Build and start containers
        run: docker-compose -f docker-compose.dev.yml up --build -d

      # 4️⃣ Wait until MySQL is healthy
      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..20}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' ${{ github.job }}_db_1)
            if [ "$STATUS" = "healthy" ]; then
              echo "MySQL is ready!"
              break
            fi
            sleep 5
          done

      # 5️⃣ Set TEST_DATABASE_URL inside the FastAPI container
      - name: Export Test DB URL in container
        run: |
          docker-compose exec fastapi sh -c "export TEST_DATABASE_URL='mysql+mysqlconnector://root:${{ secrets.DB_ROOT_PASSWORD }}@db:3306/${{ secrets.DB_NAME }}' && echo \$TEST_DATABASE_URL"

      # 6️⃣ Run lint checks inside the FastAPI container
      - name: Run Lint Checks
        run: |
          
          docker-compose -f docker-compose.dev.yml exec fastapi flake8 . --config /app/.flake8
          docker-compose -f docker-compose.dev.yml exec fastapi black --check .
          docker-compose -f docker-compose.dev.yml exec fastapi isort . --check-only

      # 7️⃣ Run tests inside the FastAPI container
      - name: Run Tests
        run: docker-compose exec fastapi sh -c "pytest -v"

      # 8️⃣ Tear down containers
      - name: Tear down containers
        if: always()
        run: docker-compose -f docker-compose.dev.yml down
